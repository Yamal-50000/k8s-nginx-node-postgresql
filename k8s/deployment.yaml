apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: k8s-simple-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: node:16-alpine
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 5000
        command: ["sh", "-c"]
        args:
        - |
          cd /app &&
          npm install express cors morgan pg pg-hstore sequelize && node server.js
        env:
        - name: PORT
          value: "5000"
        - name: KUBERNETES
          value: "true"
        - name: DATABASE_URL
          value: postgres://postgres:example@db:5432/demo
        volumeMounts:
        - name: server-js
          mountPath: /app/server.js
          subPath: server.js
      volumes:
      - name: server-js
        configMap:
          name: backend-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: k8s-simple-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: html-content
          mountPath: /usr/share/nginx/html
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
      volumes:
      - name: html-content
        emptyDir: {}  # Will be populated by init container or can be ConfigMap
      - name: nginx-config
        configMap:
          name: nginx-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: simple-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: html-content
          mountPath: /usr/share/nginx/html
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
      volumes:
      - name: html-content
        configMap:
          name: frontend-html
      - name: nginx-config
        configMap:
          name: nginx-config
